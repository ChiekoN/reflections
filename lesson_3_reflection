When would you want to use a remote repository rather than keeping all your work local?

When I am working on a project with other people and need to share files.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because otherwise the changes from GitHub might conflict with what I am working on, so I need to make sure that I really want to pull that change from GitHub.


Describe the differences between forks, clones, and branches. When would you use one instead of another?


Fork is a copy of repository especially made within GitHub.
Clone is a copy of repository. It can be between computers or within a computer.
Branch is a history of commit that separated from the main history chain.
When I would like to try another features or versions of what I am making, I would make branches.
When I want a copy of a repository from somewhere to my own environment, I would make clones.
When I want a copy of a repository within GitHub and make some changes without affecting the original, I would make forks.


What is the benefit of having a copy of the last known state of the remote stored locally?

I can make sure of the latest(up-to-date) version on GitHub, without updating my local files.
I can compare my local changes and someone else's changes on GitHub by using git log and git diff.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If I didin't use Git or GitHub, I wouldn't have to remember how to use them.
But if there weren't Git and GitHub, it would be more hassle to maintain the history of revision or to work on the project with other developers at the same time.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

In the case I want to put some changes into master but someone might have updated master while I'm working on it.
I can try merging master into my branch locally and make sure it's right then I can let another people check it. When it's ok, finally it will be merged into master branch of GitHub.

